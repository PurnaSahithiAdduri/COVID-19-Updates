{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sahithiadduri/Desktop/LearnReact/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sahithiadduri/Desktop/LearnReact/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/sahithiadduri/Desktop/LearnReact/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{fetchDailyData}from'../../api';import{Line,Bar}from'react-chartjs-2';import{rgbToHex}from'@material-ui/core';import styles from'./Chart.module.css';var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,recovered=_ref$data.recovered,deaths=_ref$data.deaths,country=_ref.country;console.log(\"This are the values passed to chart component: \",country);console.log(confirmed);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);var lineChart=dailyData.length>0?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:'Infected',borderColor:'#3333ff',fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:'Deaths',borderColor:'red',backgroundColor:'rgb(255,0,0,0.5)',fill:true}]}}):null;var barChart=confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:['Infected','Recovered','Deaths'],datasets:[{label:'People',backgroundColor:['rgb(0,0,225,0.5)','rgb(0,225,0,0.5)','rgb(225,0,0,0.5)'],data:[confirmed.value,recovered.value,deaths.value]}]},options:{legend:{display:false},title:{display:true,text:\"Current state in \".concat(country)}}}):null;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},country?barChart:lineChart);};export default Chart;","map":{"version":3,"sources":["/Users/sahithiadduri/Desktop/LearnReact/covid-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","rgbToHex","styles","Chart","data","confirmed","recovered","deaths","country","console","log","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","value","legend","display","title","text","container"],"mappings":"igBAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,OAAQC,IAAR,CAAcC,GAAd,KAAwB,iBAAxB,CACA,OAASC,QAAT,KAAyB,mBAAzB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEC,GAAMC,CAAAA,KAAK,CAAC,QAANA,CAAAA,KAAM,MAAuD,oBAApDC,IAAoD,CAA5CC,SAA4C,WAA5CA,SAA4C,CAAjCC,SAAiC,WAAjCA,SAAiC,CAAtBC,MAAsB,WAAtBA,MAAsB,CAAZC,OAAY,MAAZA,OAAY,CAC/DC,OAAO,CAACC,GAAR,CAAY,iDAAZ,CAA8DF,OAA9D,EACAC,OAAO,CAACC,GAAR,CAAYL,SAAZ,EAF+D,cAG9BT,QAAQ,CAAC,EAAD,CAHsB,wCAGxDe,SAHwD,eAG9CC,YAH8C,eAK/Df,SAAS,CAAC,UAAI,CACV,GAAMgB,CAAAA,QAAQ,2FAAG,+IACbD,YADa,uBACMd,CAAAA,cAAc,EADpB,qHAAH,kBAARe,CAAAA,QAAQ,2CAAd,CAGAA,QAAQ,GACX,CALQ,CAKP,EALO,CAAT,CAOA,GAAMC,CAAAA,SAAS,CAEXH,SAAS,CAACI,MAAV,CAAiB,CAAlB,cAAsB,oBAAC,IAAD,EACrB,IAAI,CAAE,CACFC,MAAM,CAACL,SAAS,CAACM,GAAV,CAAc,mBAAEC,CAAAA,IAAF,OAAEA,IAAF,OAAUA,CAAAA,IAAV,EAAd,CADL,CAEFC,QAAQ,CAAE,CAAC,CACRf,IAAI,CAAEO,SAAS,CAACM,GAAV,CAAc,mBAAEZ,CAAAA,SAAF,OAAEA,SAAF,OAAeA,CAAAA,SAAf,EAAd,CADE,CAERe,KAAK,CAAC,UAFE,CAGRC,WAAW,CAAC,SAHJ,CAIRC,IAAI,CAAC,IAJG,CAAD,CAKR,CACClB,IAAI,CAAEO,SAAS,CAACM,GAAV,CAAc,mBAAEV,CAAAA,MAAF,OAAEA,MAAF,OAAYA,CAAAA,MAAZ,EAAd,CADP,CAECa,KAAK,CAAC,QAFP,CAGCC,WAAW,CAAC,KAHb,CAICE,eAAe,CAAC,kBAJjB,CAKCD,IAAI,CAAC,IALN,CALQ,CAFR,CADe,EAAtB,CAgBK,IAlBR,CAsBA,GAAME,CAAAA,QAAQ,CAEXnB,SAAS,cAAE,oBAAC,GAAD,EACV,IAAI,CAAE,CACJW,MAAM,CAAC,CAAC,UAAD,CAAY,WAAZ,CAAyB,QAAzB,CADH,CAEJG,QAAQ,CAAC,CAAC,CACLC,KAAK,CAAE,QADF,CAELG,eAAe,CAAC,CAAC,kBAAD,CAAoB,kBAApB,CAAuC,kBAAvC,CAFX,CAGLnB,IAAI,CAAC,CAACC,SAAS,CAACoB,KAAX,CAAkBnB,SAAS,CAACmB,KAA5B,CAAmClB,MAAM,CAACkB,KAA1C,CAHA,CAAD,CAFL,CADI,CAUV,OAAO,CAAE,CACNC,MAAM,CAAC,CAAEC,OAAO,CAAC,KAAV,CADD,CAENC,KAAK,CAAG,CAACD,OAAO,CAAC,IAAT,CAAeE,IAAI,4BAAqBrB,OAArB,CAAnB,CAFF,CAVC,EAAF,CAcJ,IAhBR,CAmBG,mBACI,2BAAK,SAAS,CAAEN,MAAM,CAAC4B,SAAvB,EACItB,OAAO,CAAGgB,QAAH,CAAcV,SADzB,CADJ,CAKP,CA1DA,CA4DD,cAAeX,CAAAA,KAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { fetchDailyData } from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\nimport { rgbToHex } from '@material-ui/core';\n\nimport styles from './Chart.module.css'\n\n const Chart=({ data: { confirmed, recovered, deaths }, country })=>{\n     console.log(\"This are the values passed to chart component: \",country);\n     console.log(confirmed);\n     const [dailyData,setDailyData] = useState({});\n\n     useEffect(()=>{\n         const fetchAPI = async()=>{\n             setDailyData(await fetchDailyData());\n         };\n         fetchAPI();\n     },[]);\n\n     const lineChart=(\n        \n        (dailyData.length>0)?(<Line \n         data={{\n             labels:dailyData.map(({date})=>date),\n             datasets: [{\n                data: dailyData.map(({confirmed})=>confirmed),\n                label:'Infected',\n                borderColor:'#3333ff',\n                fill:true\n             },{\n                data: dailyData.map(({deaths})=>deaths),\n                label:'Deaths',\n                borderColor:'red',\n                backgroundColor:'rgb(255,0,0,0.5)',\n                fill:true\n             }],\n         }}\n         />):null\n     );\n\n\n     const barChart=(\n    \n        confirmed?(<Bar \n         data={{\n           labels:['Infected','Recovered', 'Deaths'],\n           datasets:[{\n                label: 'People',\n                backgroundColor:['rgb(0,0,225,0.5)','rgb(0,225,0,0.5)','rgb(225,0,0,0.5)'],\n                data:[confirmed.value, recovered.value, deaths.value],\n         },\n        ],\n        }}\n         options={{\n            legend:{ display:false },\n            title : {display:true, text:`Current state in ${country}`}\n         }}\n         />):null\n     );\n\n        return (\n            <div className={styles.container}>\n               {country ? barChart : lineChart}\n            </div>\n        )\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}