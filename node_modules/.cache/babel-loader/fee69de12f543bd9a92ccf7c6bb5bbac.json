{"ast":null,"code":"var _jsxFileName = \"/Users/sahithiadduri/Desktop/LearnReact/covid-tracker/src/components/CountryPicker/CountryPicker.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl, FormLabel } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({\n  handleCountryChange\n}) => {\n  const [countries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    className: styles.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NativeSelect, {\n    defaultValue: \"\",\n    onChange: e => handleCountryChange(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, \"Global\"), countries.map((country, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 51\n    }\n  }, country))), /*#__PURE__*/React.createElement(FormLabel, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, \"We'll never share your email with anyone else.\"));\n};\n\nexport default CountryPicker;","map":{"version":3,"sources":["/Users/sahithiadduri/Desktop/LearnReact/covid-tracker/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","FormLabel","styles","fetchCountries","CountryPicker","handleCountryChange","countries","setFetchedCountries","fetchAPI","formControl","e","target","value","map","country","i"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,YAAR,EAAsBC,WAAtB,EAAkCC,SAAlC,QAAkD,mBAAlD;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,cAAT,QAA+B,WAA/B;;AAEC,MAAMC,aAAa,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAyB;AACzC,QAAM,CAACC,SAAD,EAAYC,mBAAZ,IAAmCV,QAAQ,CAAC,EAAD,CAAjD;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMU,QAAQ,GAAG,YAAS;AACvBD,MAAAA,mBAAmB,CAAC,MAAMJ,cAAc,EAArB,CAAnB;AACF,KAFD;;AAIAK,IAAAA,QAAQ;AACX,GANQ,EAMP,CAACD,mBAAD,CANO,CAAT;AAQG,sBACI,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEL,MAAM,CAACO,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAC,EAA3B;AAA8B,IAAA,QAAQ,EAAGC,CAAD,IAAKL,mBAAmB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKN,SAAS,CAACO,GAAV,CAAc,CAACC,OAAD,EAASC,CAAT,kBAAe;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,KAAK,EAAED,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,OAAjC,CAA7B,CAFL,CADJ,eAKI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDALJ,CADJ;AAWP,CAtBA;;AAwBD,eAAeV,aAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport {NativeSelect, FormControl,FormLabel} from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css'\nimport { fetchCountries } from '../../api';\n\n const CountryPicker=({handleCountryChange})=>{\n     const [countries, setFetchedCountries] = useState([]);\n\n     useEffect(()=>{\n         const fetchAPI = async()=>{\n            setFetchedCountries(await fetchCountries());\n         }\n\n         fetchAPI();\n     },[setFetchedCountries]);\n\n        return (\n            <FormControl className={styles.formControl}>\n                <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\n                    <option value=\"\">Global</option>\n                    {countries.map((country,i) => <option key={i} value={country}>{country}</option>)}\n                </NativeSelect>\n                <FormLabel className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </FormLabel>\n            </FormControl>\n        )\n}\n\nexport default CountryPicker;\n\n"]},"metadata":{},"sourceType":"module"}