{"ast":null,"code":"var _jsxFileName = \"/Users/sahithiadduri/Desktop/LearnReact/covid-tracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { rgbToHex } from '@material-ui/core';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  console.log(\"This are the values passed to chart component: \", country);\n  console.log(confirmed);\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length > 0 ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgb(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 31\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgb(0,0,225,0.5)', 'rgb(0,225,0,0.5)', 'rgb(225,0,0,0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 20\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/sahithiadduri/Desktop/LearnReact/covid-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","rgbToHex","styles","Chart","data","confirmed","recovered","deaths","country","console","log","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","value","legend","display","title","text","container"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { fetchDailyData } from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\nimport { rgbToHex } from '@material-ui/core';\n\nimport styles from './Chart.module.css'\n\n const Chart=({ data: { confirmed, recovered, deaths }, country })=>{\n     console.log(\"This are the values passed to chart component: \",country);\n     console.log(confirmed);\n     const [dailyData,setDailyData] = useState({});\n\n     useEffect(()=>{\n         const fetchAPI = async()=>{\n             setDailyData(await fetchDailyData());\n         };\n         fetchAPI();\n     },[]);\n\n     const lineChart=(\n        \n        (dailyData.length>0)?(<Line \n         data={{\n             labels:dailyData.map(({date})=>date),\n             datasets: [{\n                data: dailyData.map(({confirmed})=>confirmed),\n                label:'Infected',\n                borderColor:'#3333ff',\n                fill:true\n             },{\n                data: dailyData.map(({deaths})=>deaths),\n                label:'Deaths',\n                borderColor:'red',\n                backgroundColor:'rgb(255,0,0,0.5)',\n                fill:true\n             }],\n         }}\n         />):null\n     );\n\n\n     const barChart=(\n    \n        confirmed?(<Bar \n         data={{\n           labels:['Infected','Recovered', 'Deaths'],\n           datasets:[{\n                label: 'People',\n                backgroundColor:['rgb(0,0,225,0.5)','rgb(0,225,0,0.5)','rgb(225,0,0,0.5)'],\n                data:[confirmed.value, recovered.value, deaths.value],\n         },\n        ],\n        }}\n         options={{\n            legend:{ display:false },\n            title : {display:true, text:`Current state in ${country}`}\n         }}\n         />):null\n     );\n\n        return (\n            <div className={styles.container}>\n               {country ? barChart : lineChart}\n            </div>\n        )\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}