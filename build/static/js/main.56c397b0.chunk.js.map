{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","image/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varient","bluecolor","start","end","value","duration","separator","Date","toDateString","greencolor","redcolor","url","fetchData","country","a","changebleURL","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","FormHelperText","App","state","fetchdata","setState","this","image","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56c397b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"bluecolor\":\"Cards_bluecolor__a9Sv3\",\"greencolor\":\"Cards_greencolor__2Rjsr\",\"redcolor\":\"Cards_redcolor__3P13K\"};","import React from 'react';\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css'\n\n const Cards=({data:{confirmed,recovered,deaths,lastUpdate}})=>{\n  \n     if(!confirmed){\n    return 'Loading..'\n     }\n        return (\n            <div className={styles.container}>\n               <Grid container spacing={3} justify=\"center\">\n                    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\"  gutterBottom>Infected</Typography>\n                            <Typography varient=\"h4\" className={styles.bluecolor}>\n                                <CountUp\n                                start={0}\n                                end={confirmed.value}\n                                duration={2}\n                                separator=\",\"\n                                />\n                            </Typography>\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                            <Typography varient=\"body2\">No of Active cases of COVID-19</Typography>\n                        </CardContent>\n                    </Grid>\n                    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                            <Typography varient=\"h4\" className={styles.greencolor}>\n                            <CountUp\n                                start={0}\n                                end={recovered.value}\n                                duration={2}\n                                separator=\",\"\n                                />\n                            </Typography>\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                            <Typography varient=\"body2\">No of recoveries cases of COVID-19</Typography>\n                        </CardContent>\n                    </Grid>\n                    <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                            <Typography varient=\"h4\" className={styles.redcolor}>    \n                             <CountUp\n                                start={0}\n                                end={deaths.value}\n                                duration={2}\n                                separator=\",\"\n                                /></Typography>\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                            <Typography varient=\"body2\">No of Deaths cases of COVID-19</Typography>\n                        </CardContent>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async(country) =>{\n    var changebleURL = url;\n\n    if(country) changebleURL = `${url}/countries/${country}`;\n\n    try{\n        const {data:{confirmed,recovered,deaths,lastUpdate}} = await axios.get(changebleURL);\n        const modifiedData={confirmed,recovered,deaths,lastUpdate}\n         \n        return modifiedData;\n    }catch(error){\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async() =>{\n    try{\n        const {data} = await axios.get(`${url}/daily`);\n        const modifiedData= data.map((dailyData)=>({\n            confirmed:dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }));\n        return modifiedData;\n    }catch(error){\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async() => {\n    try{\n        const {data:{countries}} = await axios.get(`${url}/countries`);\n        return countries.map((country)=>country.name);\n    }catch(error){\n        console.log(error);\n    }\n}","import React,{useState,useEffect} from 'react';\nimport { fetchDailyData } from '../../api';\nimport {Line, Bar} from 'react-chartjs-2';\nimport { rgbToHex } from '@material-ui/core';\n\nimport styles from './Chart.module.css'\n\n const Chart=({ data: { confirmed, recovered, deaths }, country })=>{\n     console.log(\"This are the values passed to chart component: \",country);\n     console.log(confirmed);\n     const [dailyData,setDailyData] = useState({});\n\n     useEffect(()=>{\n         const fetchAPI = async()=>{\n             setDailyData(await fetchDailyData());\n         };\n         fetchAPI();\n     },[]);\n\n     const lineChart=(\n        \n        (dailyData.length>0)?(<Line \n         data={{\n             labels:dailyData.map(({date})=>date),\n             datasets: [{\n                data: dailyData.map(({confirmed})=>confirmed),\n                label:'Infected',\n                borderColor:'#3333ff',\n                fill:true\n             },{\n                data: dailyData.map(({deaths})=>deaths),\n                label:'Deaths',\n                borderColor:'red',\n                backgroundColor:'rgb(255,0,0,0.5)',\n                fill:true\n             }],\n         }}\n         />):null\n     );\n\n\n     const barChart=(\n    \n        confirmed?(<Bar \n         data={{\n           labels:['Infected','Recovered', 'Deaths'],\n           datasets:[{\n                label: 'People',\n                backgroundColor:['rgb(0,0,225,0.5)','rgb(0,225,0,0.5)','rgb(225,0,0,0.5)'],\n                data:[confirmed.value, recovered.value, deaths.value],\n         },\n        ],\n        }}\n         options={{\n            legend:{ display:false },\n            title : {display:true, text:`Current state in ${country}`}\n         }}\n         />):null\n     );\n\n        return (\n            <div className={styles.container}>\n               {country ? barChart : lineChart}\n            </div>\n        )\n}\n\nexport default Chart;\n","import React,{useState, useEffect} from 'react';\nimport {NativeSelect, FormControl,FormHelperText} from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css'\nimport { fetchCountries } from '../../api';\n\n const CountryPicker=({handleCountryChange})=>{\n     const [countries, setFetchedCountries] = useState([]);\n\n     useEffect(()=>{\n         const fetchAPI = async()=>{\n            setFetchedCountries(await fetchCountries());\n         }\n\n         fetchAPI();\n     },[setFetchedCountries]);\n\n        return (\n            <FormControl className={styles.formControl}>\n                <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\n                    <option value=\"\">Global</option>\n                    {countries.map((country,i) => <option key={i} value={country}>{country}</option>)}\n                </NativeSelect>\n                <FormHelperText className=\"text-muted\">\n      Please select a country here..\n    </FormHelperText>\n            </FormControl>\n        )\n}\n\nexport default CountryPicker;\n\n","import React from 'react';\n\n\nimport {Cards,CountryPicker, Chart} from './components';\nimport styles from './App.module.css'\nimport { fetchData } from './api';\nimport image from './image/image.png';\n\nclass App extends React.Component{\n\n    state={\n        data:{},\n        country:''\n    };\n\n    async componentDidMount(){\n        const fetchdata = await fetchData();\n        this.setState({data:fetchdata});\n    }\n\n    handleCountryChange = async(country)=>{\n        const fetchdata = await fetchData(country);\n        this.setState({data:fetchdata,country:country});\n    }\n\n    render(){\n        const {data,country} = this.state;\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={image} alt=\"COVID-19\" />\n                <Cards data={data}/>\n                <CountryPicker  handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App'\n\nReactDOM.render(<App />,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}